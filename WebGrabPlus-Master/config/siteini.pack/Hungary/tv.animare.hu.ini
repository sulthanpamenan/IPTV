**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tv.animare.hu
* @MinSWversion:
* @Revision 0 - [08/01/2015] Francis De Paemeleere
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------

site {url=tv.animare.hu|timezone=Europe/Budapest|maxdays=21.3|cultureinfo=hu-HU|charset=UTF-8|titlematchfactor=90|nopageoverlaps|episodesystem=onscreen}

urldate.format {datestring|yyyMMdd}
url_index{url|http://tv.animare.hu/default.aspx?c=|channel|&t=|urldate|}
url_index.headers 	  {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the index pages

index_showsplit.scrub {regex||id="tv\d*".*?class="w1c"||}
index_showsplit.modify {substring(type=regex)|"w2".*?</div></div>}

index_start.scrub {regex||class="w33"[^>]*>(\d{2}:\d{2})||}
index_title.scrub {regex||^.*?class="w33a"[^>]*>([^>]*?)[\:<]||}
index_urlshow.scrub {regex||class="w33a"[^>]*?href="(.*?)"||}
index_urlchannellogo.modify {addstart|http://tv.animare.hu/i/o/'config_site_id'.png}

index_urlshow.modify {addstart(not="")|http://tv.animare.hu/}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the detail pages

title.scrub {regex||<h1>[^>]*itemprop="name"[^>]*>(.*?)</h1>||}
titleoriginal.scrub {regex||<b>Eredeti cím:</b>\s*<br />\s*(.*?)\s*<||}
description.scrub	{regex||itemprop="description"[^>]*>(.*?)</div>||}
actor.scrub 		{regex||itemprop="actors"[^>]*>(.*?)</div>||}
director.scrub 		{regex||itemprop="director"[^>]*>(.*?)</div>||}
rating.scrub {regex||class="biPar".*?src="(.*?)"||}
category.scrub {regex||class="(?:tvCategory\|biCat)".*?itemprop="genre"[^>]*>(.*?)</||}
episode.scrub {regex||<b>Epizód:</b>(.*?)</div>||}
productiondate.scrub {regex||<b>Gyártási év:</b>(.*?)</div>||}
showicon.scrub {regex||class="bi"[^<]*background-image:url\('([^']*)'||}

title.modify			{remove(type=regex)|<[^>]*>}
subtitle.modify			{addstart|'title'}
subtitle.modify			{remove|'index_title'} * if there is still stuff after the 'index_title', this is the subtitle
title.modify			{remove|'subtitle'}	* remove the subtitle from the detail title
subtitle.modify			{remove(type=regex)|^\s*[\:\-]\s*}	* remove any trailing stuff on the subtitle
category.modify			{remove(type=regex)|<[^>]*>}
description.modify		{remove(type=regex)|<[^>]*>}
actor.modify			{remove(type=regex)|<[^>]*>}
director.modify			{remove(type=regex)|<[^>]*>}
productiondate.modify	{remove(type=regex)|<[^>]*>}
episode.modify			{remove(type=regex)|<[^>]*>}

rating.modify {replace(~12.png)|'rating'|12+}
rating.modify {replace(~16.png)|'rating'|16+}
rating.modify {replace(~18.png)|'rating'|18+}

**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index{url|http://tv.animare.hu/tvcsatorna.aspx}
*index_site_id.scrub {regex||<a href="/default\.aspx\?c=(\d*)"><img class="channelimg" [^>]*title="[^"]*"||}
*index_site_channel.scrub {regex||<a href="/default\.aspx\?c=\d*"><img class="channelimg" [^>]*title="([^"]*)"||}
*scope.range {(channellist)|end}
*index_site_channel.modify {remove|csatorna műsora}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
