**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: radiotimes.com
* @MinSWversion: V1.1.1/56.25
*   none
* @Revision 14 - [30/06/2016] Blackbear199
*	- alot site changes
* @Revision 13 - [11/11/2015] Jan van Straaten
*	- firstshow no longer required (starttime with date)
*	- added gzip headers
* @Revision 12 - [21/10/2015] Jan van Straaten
*   - new start and stoptime (inc date)
*   - another new channellist! (site change again!)
* @Revision 11 - [03/09/2015] Francis De Paemeleere
*   - make channel list file creation more robust
*   - fix title/subtitle grabbing
* @Revision 10 - [26/08/2015] Jan van Straaten
*   corrected channel list file creation for site change
* @Revision 9 - [03/12/2013] Jan van Straaten
*   remove duplicate entries in showsplit
* @Revision 8 - [16/09/2013] Francis De Paemeleere
*   adapt to site changes
*   add full automatic .channels.xml generation
* @Revision 7 - [05/09/2012] Jan van Straaten /Willy de wilde
*   urlindex needs channels=
* @Revision 6 - []
*   showsplit
* @Revision 5 - []
*   improved episode and category
* @Revision 4 - []
*   completely new, site change
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------

site {url=radiotimes.com|timezone=Europe/London|maxdays=14|cultureinfo=en-GB|charset=UTF-8|titlematchfactor=90}
site {episodesystem=onscreen}
url_index{url|http://www.radiotimes.com/rt-service/schedule/get?startDate=|urldate|%2000:00:00&hours=24&totalWidthUnits=0&channels=|channel}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
urldate.format {datestring|dd-MM-yyyy}
*
index_showsplit.scrub {regex||TvListings"\:\[(\{.*?\}[,]{0,1})*\]||}
scope.range {(splitindex)|end}
index_temp_1.modify {substring(type=regex)|'index_showsplit' ".+\"EndTimeMF\":(.+)\"EpisodeId\""}
index_temp_1.modify {cleanup(removeduplicates=equal,70 link="index_showsplit")}
end_scope
*
index_urlshow {url|http://www.radiotimes.com|"Link":"||","|","}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}
*
index_start.scrub {regex||"StartTimeMF":"(\d{4}-\d{1,2}-\d{1,2} \d{2}:\d{2}:00)Z","||}
index_stop.scrub  {regex||"EndTimeMF":"(\d{4}-\d{1,2}-\d{1,2} \d{2}:\d{2}:00)Z","||}
index_title.scrub {single|"Title":"||"|"}
index_description.scrub {single|"Description":"||","|","}
index_starrating.scrub {single|"FilmStarRating":||,"|,"}
index_category.scrub {single|"Genre":"||","|","}
*
index_title.modify {set(== "Close")|Channel Off Air}
index_category.modify {cleanup(style=name)}
index_starrating.modify {remove|null}
*
scope.range{(showdetails)|end}
title.scrub {single|<h1 class="programme-header__heading|itemprop="name">|</h1>|<div}
subtitle.scrub {regex||<h2 class="episode-information[^>]*itemprop="name">S\d+-E\d+\s(.+?)<\/h2>||}
description.scrub {single|<section class="about">|<p>|</p>|</section>}
actor.scrub {multi(excludeblock="Director""Producer""Writer""Presenter""Host")|<span class="cast-role" itemprop="jobTitle">|itemprop="name">|</span>|</div>}
director.scrub {multi|<span class="cast-role" itemprop="jobTitle">Director</span>|itemprop="name">|</span>|</div>}
producer.scrub {multi|<span class="cast-role" itemprop="jobTitle">Executive Producer</span>|itemprop="name">|</span>|</div>}
temp_1.scrub {multi|<span class="cast-role" itemprop="jobTitle">Series Producer</span>|itemprop="name">|</span>|</div>} *other producer?
writer.scrub {multi|<span class="cast-role" itemprop="jobTitle">Writer</span>|itemprop="name">|</span>|</div>}
presenter.scrub {multi|<span class="cast-role" itemprop="jobTitle">Presenter</span>|itemprop="name">|</span>|</div>}
presenter.scrub {multi|<span class="cast-role" itemprop="jobTitle">Host</span>|itemprop="name">|</span>|</div>}
*
episode.scrub {regex||<h2 class="episode-information[^>]*itemprop="name">(S\d+-E\d+)\s.+?<\/h2>||}
episode.modify {replace(not "")|-| }
episode.scrub {regex||<h2 class="episode-information[^>]*itemprop="name">(Series \d+-Episode \d+)<\/h2>||}
episode.modify {replace(not "")|Series |S}
episode.modify {replace(not "")|Episode |E}
*
rating.scrub {single|<dd id="certificate"|">|</dd>|</dd>}
productiondate.scrub {single|<span class="episode-year">(||)</span>|)</span>}
starrating.scrub {single|<dt>Buzz</dt>||</dd>|</dd>}
*
title.modify {addstart("")|'index_title'}
producer.modify {addend(not ~ 'temp_1')|\|'temp_1'}
description.modify {cleanup}
subtitle.modify {remove(type=regex)|\d{2}\/\d{2}\/\d{4}}
subtitle.modify {clear(~ "Episode")}
end_scope
*
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*subpage.format {list|platformmainchannels?specialisation=tv|nommainplatformchannels?specialisation=tv|platformmainchannels?specialisation=radio|nonmainplatformchannels?specialisation=radio}
*url_index {url|http://www.radiotimes.com/rt-service/personalisation/get|subpage|&platform=Popular channels}
*
*index_site_id.scrub {regex||"Id":(\d*?),||}
*index_site_channel.scrub {regex||"DisplayValue":"(.*?)"||}
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end

