**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: yo.tv
* @MinSWversion:
* @Revision 4 - [22/04/2016] 1NSdbZVbpZDX
*	- fix title to match generic siteini, fix credits details
*	added subtitles and production date
* @Revision 3 - [31/01/2016] 1NSdbZVbpZDX
*	- fix subtitle, episode and gabs
* @Revision 2 - [28/01/2016] Francis De Paemeleere
*   - create a country only channels.xml generation
* @Revision 1 - [27/01/2016] 1NSdbZVbpZDX
*   - make a generic siteini
* @Revision 0 - [08/09/2014] Willy De Wilde/Francis De Paemeleere
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------

site {url=yo.tv|timezone=UTC|maxdays=14.14|cultureinfo=en-GB|charset=UTF-8|titlematchfactor=50|nopageoverlaps}

urldate.format {daycounter|0}
url_index{url |http://##COUNTRY##.yo.tv/api/GS?cid=##CHANNEL_ID##,&offset=,&day=|urldate|}

scope.range {(urlindex)|end}
index_temp_1.modify {substring(type=regex)|'config_site_id' "COUNTRY:([^,]*)"}
url_index.modify {replace|##COUNTRY##|'index_temp_1'}
index_temp_1.modify {substring(type=regex)|'config_site_id' "PROVIDER_ID:([^,]*)"}
url_index.modify {replace|##PROVIDER_ID##|'index_temp_1'}
index_temp_1.modify {substring(type=regex)|'config_site_id' "CHANNEL_ID:([^,]*)"}
url_index.modify {replace |##CHANNEL_ID##|'index_temp_1'}
end_scope

url_index.headers {customheader=Accept-Encoding=gzip,deflate}
urldate.format {daycounter|0}

*index_showsplit.scrub {regex (debug)||<a style='width:(.*?)</a>||}
index_showsplit.scrub {multi |["|<a|</a>|"]}
*index_start.scrub {regex ||data-time='(.*?)'||}
index_start.scrub {single |data-time=|'|'|data-flags}
*index_title.scrub {single (separator=": " include=first)|<h2|</i> | </h2>| <h3>}
index_title.scrub {single (separator=": " include=first)|<h2|> | </h2>| <h3>}
*index_title.scrub {regex (separator=": " include=first)||>(.*?)\s<\/h2>||} *OLD
index_title.modify {cleanup (tags="<"">")}
index_subtitle.scrub {single (separator=": " exclude=first)|<h2|> | </h2>| <h3>}
index_subtitle.modify {cleanup (tags="<"">")} *NEW
index_temp_3.scrub {regex ||\((\d{4})\).<\/h2>\s<h3>||} *for productiondate
index_title.modify {remove(type=regex)|(.\(\d{4}\)$)}
index_subtitle.modify {remove(type=regex)|(.\(\d{4}\)$)}

scope.range {(indexshowdetails)|end}
index_temp_1.scrub {single|href='||'>|}
index_temp_2.modify {substring(type=regex)|'config_site_id' "COUNTRY:([^,]*)"} *for urlshow
index_urlshow.modify {set |http://'index_temp_2'.yo.tv'index_temp_1'}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the detail pages
end_scope

scope.range {(showdetails)|end}
title.scrub {single (separator=": " include=first)|bg-title" >||</div>|}
title.modify {remove (type=regex)|(.\(\d{4}\)$)}
subtitle.scrub {single (separator=": " exclude=first)|<h2|>||</h2>}
subtitle.modify {remove (type=regex)|(\s\(\d{4}\))}
subtitle.modify {remove | </h2}
episode.scrub {single |prog box">|<span class="episode" >|</span><h3>|</div></div>}
episode.modify {remove (type=regex)|(:?.of.\d+)}
episode.modify {remove (type=regex)|(.<.*span.*)}
episode.modify {replace |Season |S.}
episode.modify {replace | Episode |-Ep.}
*subtitle.scrub {regex (debug) ||prog box">(?:.*)<span  >(.*?)<span  >Episode||}
*subtitle.modify {remove (type=regex)|(.<.*span.*)}
subtitle.scrub {single |prog box">|<span  >| </span></span>|<h3>}
subtitle.modify {cleanup (tags="<"">")}
subtitle.modify {remove (type=regex)|(.Episode.*)}
subtitle.modify {remove (type=regex)|(Rating.*)}
productiondate.modify {addstart |'index_temp_3'}
rating.scrub {single |Rating:</span> ||</span>|</div></a></div></li><li}
description.scrub {single |prog box"|<h3>||</h3>}
description.modify {remove |</h3>}
category.scrub {multi |Genre</h2>|<div  >|</div>|<div class="}
category.scrub {single |prog box">|><h2 class='|'>|<span}
*********general credits*********
*actor.scrub {regex ||<ul class="cast">(?:.*?)(?:<li><div>(.*?)</div></li>(?:.*?))*</ul>||}
*actor.modify {replace |</div><div class="partname">|[}
*actor.modify {addend (notnull)|]}
*actor.modify {remove | [Actor]}
***************
*specific credits
actor.scrub {multi |id="cast-box" >|<div>| </div><div class|castoverlay" >}
temp_1.scrub {multi |Crew</h2>|<li><div>|</div></li>|</ul>} *debug for more credits
temp_1.modify {replace |</div><div class="partname">|[}
temp_1.modify {addend (notnull)|]}
director.modify {substring (type=regex)|'temp_1' "(.*?)\s(?:\[Director\])"} *spa, eng
director.modify {substring (type=regex)|'temp_1' "(.*?)\s(?:\[Réalisateur\])"} *french
composer.modify {substring (type=regex)|'temp_1' "(.*?)\s(?:\[Compositor\])"} *spa, port
producer.modify {substring (type=regex)|'temp_1' "(.*?)\s(?:\[Produtora\])"} *port
producer.modify {substring (type=regex)|'temp_1' "(.*?)\s(?:\[Produtor\])"} *port
producer.modify {substring (type=regex)|'temp_1' "(.*?)\s(?:\[Productor\])"} *spa
producer.modify {substring (type=regex)|'temp_1' "(.*?)\s(?:\[Productor ejecutivo\])"} *spa
producer.modify {substring (type=regex)|'temp_1' "(.*?)\s(?:\[Compañías productores\])"} *spa
producer.modify {substring (type=regex)|'temp_1' "(.*?)\s(?:\[Executive Producer\])"} *eng
producer.modify {substring (type=regex)|'temp_1' "(.*?)\s(?:\[Production Company\])"} *eng
producer.modify {substring (type=regex)|'temp_1' "(.*?)\s(?:\[Société de production\])"} *french
commentator.modify {substring (type=regex)|'temp_1' "(.*?)\s(?:\[Reporter\])"} *eng
commentator.modify {substring (type=regex)|'temp_1' "(.*?)\s(?:\[Jornalista\])"} *port
commentator.modify {substring (type=regex)|'temp_1' "(.*?)\s(?:\[Journaliste\])"} *french
writer.modify {substring (type=regex)|'temp_1' "(.*?)\s(?:\[Writer\])"} *eng
writer.modify {substring (type=regex)|'temp_1' "(.*?)\s(?:\[Autor\])"} *port
writer.modify {substring (type=regex)|'temp_1' "(.*?)\s(?:\[Escritor\])"} *spa
presenter.modify {substring (type=regex)|'temp_1' "(.*?)\s(?:\[Apresentador\])"} *port

showicon.scrub {single |og:image"|content="https:|"|  />}
showicon.modify {addstart (notnull)|https:}

end_scope


**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  COUNTRY FILE CREATION (only to create the xxx_country.xml file)
**
** @auto_xml_country_start
*url_index{url|http://www.yo.tv}
*index_site_channel.scrub {multi|<ul data-filter="true" data-role="listview">|<li>|</li>|</ul>}
*index_site_id.scrub {multi|<ul data-filter="true" data-role="listview">|href="|"|</ul>}
*scope.range {(channellist)|end}
*index_site_id.modify {substring(type=regex)|http://(.*).yo.tv}
*index_site_id.modify {addstart|COUNTRY:}
*index_site_id.modify {addend|,ZIPCODE:}
*index_site_channel.modify {cleanup(tags="<"">")}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_country_start



**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  PROVIDER FILE CREATION (only to create the xxx_provider.xml file)
**
** @auto_xml_provider_start
*scope.range {(urlindex)|end}
*index_temp_1.modify {substring(type=regex)|'config_site_id' "COUNTRY:([^,]*)"}
*url_index.modify {replace|##COUNTRY##|'index_temp_1'}
*index_temp_1.modify {substring(type=regex)|'config_site_id' "ZIPCODE:([^,]*)"}
*url_index.modify {replace|##ZIPCODE##|'index_temp_1'}
*end_scope
*
*url_index{url |http://##COUNTRY##.yo.tv/api/setting?id=##ZIPCODE##&lookupid=1}
*index_site_channel.scrub {regex||"Name"\s*:\s*"([^"\\]*(?:\\.[^"\\]*)*)"||}
*index_site_id.scrub {regex||"Value"\s*:\s*"([^"\\]*(?:\\.[^"\\]*)*)"||}
*scope.range {(channellist)|end}
*index_temp_1.modify {substring(type=regex)|'config_site_id' "COUNTRY:([^,]*)"}
*index_site_id.modify {addstart|COUNTRY:'index_temp_1',PROVIDER_ID:}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_provider_end

**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNELPROVIDER FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channelprovider_start
*scope.range {(urlindex)|end}
*index_temp_1.modify {substring(type=regex)|'config_site_id' "COUNTRY:([^,]*)"}
*url_index.modify {replace|##COUNTRY##|'index_temp_1'}
*index_temp_1.modify {substring(type=regex)|'config_site_id' "PROVIDER_ID:([^,]*)"}
*url_index.modify {replace |##PROVIDER_ID##|'index_temp_1'}
*end_scope
*
*url_index{url|http://##COUNTRY##.yo.tv/settings/headend/##PROVIDER_ID##}
*index_site_channel.scrub {multi(separator="  " include="alt=""<h2>")|<div id="channelbar" >|<li>|</li>|</ul>}
*index_site_channel.modify {remove |alt=}
*index_site_channel.modify {remove |"}
*index_site_channel.modify {remove |<h2>}
*index_site_channel.modify {remove |</h2>}
*index_site_id.scrub{multi|<div id="content" >|<li id="|"}
*scope.range {(channellist)|end}
*index_temp_1.modify {substring(type=regex)|'config_site_id' "COUNTRY:([^,]*)"}
*index_temp_2.modify {substring(type=regex)|'config_site_id' "PROVIDER_ID:([^,]*)"}
*index_site_id.modify {addstart|COUNTRY:'index_temp_1',PROVIDER_ID:'index_temp_2',CHANNEL_ID:}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channelprovider_end


**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*scope.range {(urlindex)|end}
*index_temp_1.modify {substring(type=regex)|'config_site_id' "COUNTRY:([^,]*)"}
*url_index.modify {replace|##COUNTRY##|'index_temp_1'}
*end_scope
*
*url_index{url|http://##COUNTRY##.yo.tv/settings/headend/}
*index_site_channel.scrub {multi(separator="  " include="alt=""<h2>")|<div id="channelbar" >|<li>|</li>|</ul>}
*index_site_channel.modify {remove|alt=}
*index_site_channel.modify {remove|"}
*index_site_channel.modify {remove|<h2>}
*index_site_channel.modify {remove|</h2>}
*index_site_id.scrub{multi|<div id="content" >|<li id="|"}
*scope.range {(channellist)|end}
*index_temp_1.modify {substring(type=regex)|'config_site_id' "COUNTRY:([^,]*)"}
*index_site_id.modify {addstart|COUNTRY:'index_temp_1',CHANNEL_ID:}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
