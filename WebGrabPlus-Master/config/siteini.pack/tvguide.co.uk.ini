**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tvguide.co.uk
* @MinSWversion: V1.1.1/54.1
*   none
* @Revision 14 - [28/07/2016] Blackbear199
*  rewrite details page scrubs(url change).
* @Revision 13 - [05/02/2015] Francis De Paemeleere
*  change to xmltv_ns episode system
* @Revision 12 - [02/12/2014] Francis De Paemeleere
*   remove user specific modifications
*   removed duplicate shows issue
*   add showicon
* @Revision 11 - [30/11/2014] Ruby
*   Description scrub modification + new Detailpage layout: index_urlshow modification + remake details scrub
* @Revision 10 - [08/09/2014] Jan van Straaten
*   complete remake: Single channel index page now available, loadcookie not required anymore
* @Revision 9 - [04/04/2014] Willy De Wilde
*   additional separator in start
* @Revision 8 - [20/03/2014] Willy De Wilde
*   Website change
* @Revision 7 - [24/02/2014] Willy De Wilde
*   Use of main page - channel pages do not grab anymore
* @Revision 6 - [16/12/2013] Francis De Paemeleere
*   adapted to site changes in the indexdetail pages
* @Revision 5 - [17/11/2013] Jan van Straaten
*   adapted to site changes in the showdetail pages
* @Revision 4 - [15/01/2013] Francis De Paemeleere
*   added new auto_xml_channel
* @Revision 3 - [30/11/2011] Jan van Straaten
*   make producer multi value
* @Revision 2 - []
*   correction in description, adapted for 1.0.7
* @Revision 1 - []
*   added producer, writer, episode , improved description, adapted for 1.0.5
* @Remarks:
*   none
* @header_end
**------------------------------------------------------------------------------------------------

site {url=tvguide.co.uk|timezone=Europe/London|maxdays=7|cultureinfo=en-US|charset=UTF-8|titlematchfactor=50|nopageoverlaps|episodesystem=xmltv_ns}
url_index{url|http://my.tvguide.co.uk/channellisting.asp?ch=|channel|&cTime=|urldate| 5:00:00 AM&thisTime=&thisDay=}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
urldate.format {datestring|MM/dd/yyyy}

index_showsplit.scrub {regex||(<table [^>]*background-image[^>]*>.+?</table>.+?</table>)||}
scope.range {(splitindex)|end}
index_showsplit.modify {cleanup(removeduplicates=equal span=1)}
end_scope

index_start.scrub {regex||<span class=\"season\">(\d{1,2}\:\d{2}(?:am\|pm))||}
index_title.scrub {regex||<span class=\"programmeheading\" >(.+?)</span><br>||}
***Productiondate:
index_productiondate.scrub {single|<span class="programmeheading" >|(|)|</span><br>} * in title
index_title.modify {remove| ('index_productiondate')}
index_title.modify {cleanup}
***Category:
index_category.scrub {regex||Category </span><span class=\"programmetext\">(.*?)</span></a><br>||}
index_category.modify {remove|/Factual Topics}
index_category.modify {remove|/Folkloric}
index_category.modify {remove|/Environment}
index_category.modify {replace|/|\|}
***Episode:
index_episode.scrub {single|<b><span class="season">||</span></b><br>|}
index_episode.modify {remove| </span> <span class="season">}
index_episode.modify {replace|Season |S}
index_episode.modify {replace|Episode |E}
index_episode.modify {replace| of |/}
index_episode.modify {remove| of}

* convert the onscreen episode info to xmltv_ns
index_temp_1.modify {clear}
index_temp_2.modify {clear}
index_temp_3.modify {clear}
index_temp_4.modify {clear}

index_temp_1.modify {substring(type=regex)|'index_episode' "S(\d*)"}
index_temp_2.modify {substring(type=regex)|'index_episode' "E(\d*)"}
index_temp_3.modify {substring(type=regex)|'index_episode' "S\d*/(\d*)"}
index_temp_4.modify {substring(type=regex)|'index_episode' "E\d*/(\d*)"}

* index_temp_1 = season
* index_temp_2 = episode
* index_temp_3 = number of seasons
* index_temp_4 = number of episodes
index_temp_1.modify {calculate(not="" format=F0)|1 -}
index_temp_2.modify {calculate(not="" format=F0)|1 -}
index_episode.modify {clear}
index_episode.modify {addend('index_temp_1' not="")|'index_temp_1'}
index_episode.modify {addend('index_temp_3' not="")|/'index_temp_3'}
index_episode.modify {addend|.}
index_episode.modify {addend('index_temp_2' not="")|'index_temp_2'}
index_episode.modify {addend('index_temp_4' not="")|/'index_temp_4'}
index_episode.modify {addend|.}
index_episode.modify {clear(="..")}

***Subtitle:
index_subtitle.scrub {regex||<span class=\"tvchannel\">(.*?)</span>||}
index_subtitle.modify {remove|Category }
***Description:
index_description.scrub {regex||<span class=\"programmetext\">(.*?)</span></a><br>||}
index_description.modify {substring(type=element)|0 1}
index_description.modify {addend(not"")|.}
***Starrtaing:
index_starrating.scrub {single|Rating<br>|">|</span>|}
index_starrating.modify {addend(not"")| /10}
***Subtitles:
index_subtitles.scrub {regex||<span class='tvchannel'>\(Subtitles\)</span>||}
index_subtitles.modify {substring(type=element)|0 1} * more than one, keep only one
index_subtitles.modify {replace(not "")|'index_subtitles'|true}
***Showicon:
index_showicon.scrub {regex||<table [^>]*background-image[^>]*url\(([^)]*[^\/])\)||}
*
index_urlshow.scrub {regex||<a href=\"(http\://www.tvguide.co.uk/detail/.+?)\"||}
index_urlshow.modify {substring(type=element)|0 1}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}
*
title.scrub {single|<h1>||</h1>|</h1>}
title.modify {cleanup(tags="<"">")}
title.modify {remove|('index_productiondate')}
title.modify {cleanup}
*
director.scrub {multi(separator=", ")|Director: </span>|<span class="actor">|<br>|</span>}
producer.scrub {multi(separator=", ")|Producer: </span>|<span class="actor">|<br>|</span>}
writer.scrub {multi(separator=", ")|Writer: </span>|<span class="actor">|<br>|</span>}
*
presenter.scrub {multi(includeblock="Presenter")|<div class="cast-entry">|<span class="actor" itemprop="name">|</span>|</div>} ***Presenter used for Co-Host**
presenter.scrub {multi(includeblock="Co-host")|<div class="cast-entry">|<span class="actor" itemprop="name">|</span>|</div>}
*
commentator.scrub {multi(includeblock="Contributor")|<div class="cast-entry">|<span class="actor" itemprop="name">|</span>|</div>} ****Commentator used for Guest, Contributor, Contestant, Panellist, Performer***
commentator.scrub {multi(includeblock="Guest")|<div class="cast-entry">|<span class="actor" itemprop="name">|</span>|</div>}
commentator.scrub {multi(includeblock="Contestant")|<div class="cast-entry">|<span class="actor" itemprop="name">|</span>|</div>}
commentator.scrub {multi(includeblock="Panellist")|<div class="cast-entry">|<span class="actor" itemprop="name">|</span>|</div>}
commentator.scrub {multi(includeblock="Performer")|<div class="cast-entry">|<span class="actor" itemprop="name">|</span>|</div>}
*
composer.scrub {multi(includeblock="Narrator")|<div class="cast-entry">|<span class="actor" itemprop="name">|</span>|</div>} ***Composer used for Reporter, Narrator, Anchor***
composer.scrub {multi(includeblock="Reporter")|<div class="cast-entry">|<span class="actor" itemprop="name">|</span>|</div>}
composer.scrub {multi(includeblock="Anchor")|<div class="cast-entry">|<span class="actor" itemprop="name">|</span>|</div>}
*
actor.scrub {multi(excludeblock="Narrator""Presenter""Contributor""Guest""Contestant""Panellist""Performer""Reporter""Anchor""Co-host")|<div class="cast-entry">|<span class="actor" itemprop="name">|</span>|</div>}
*
***Description: duplicate of index page
*description.scrub {single| <span class="programmetext">||</span>|</span>}
*description.modify {cleanup(tags="<"">")}
*
*  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
*      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
*
** @auto_xml_channel_start
*url_index{url|http://www.tvguide.co.uk/}
*index_site_channel.scrub {multi(exclude="?TV")|<select name="channelid">|>|</option|</select}
*index_site_id.scrub {multi(exclude="953")|<select name="channelid">|<option value=|>|</select}
** @auto_xml_channel_end

