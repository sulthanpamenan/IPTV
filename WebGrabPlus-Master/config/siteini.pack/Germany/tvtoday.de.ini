﻿﻿**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: 
* @MinSWversion: 1.1.1/56.27
* @Revision 16 - [24/07/2016] Blackbear199
*  - subtitle fix
* @Revision 15 - [12/07/2016] Blackbear199
*  - partial rewrite,changed url_index,alot code from Christoph21x original ini reused
* @Revision 14 - [25/05/2016] Blackbear199
*   Change start/stop to use unix times,set timezone to UTC
* @Revision 13 - [12/09/2015] Christoph21x
*   Adopted site changes of index and detail pages
*	Added support for original title
* @Remarks: uses new season/episode system avail. in 56.25+,set episodesystem= to preference(onscreen or xmltv_ns) in site{...}
* @header_end
**------------------------------------------------------------------------------------------------
site {url=tvtoday.de|timezone=UTC|maxdays=14|cultureinfo=de-DE|charset=UTF-8|titlematchfactor=90}
site {ratingsystem=TVToday|episodesystem=xmltv_ns}
url_index{url|http://www.tvtoday.de/programm/?format=genre&genre=ALL&offset=0&date=|urldate|&slotIndex=all&channel=|channel|&tips=&order=time}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
urldate.format {datestring|dd.MM.yyyy} 
*
index_showsplit.scrub {multi(excludeblock="</table>")|<tr valign="top">||</tr>|</tr>}
index_urlchannellogo {url||<div id="program_complete">|<img src="|"| id=}
*
index_start.scrub {single|data-rel-start="||"|"} 
index_stop.scrub {single|data-rel-end="||"|"}
*
index_title.scrub {single(separator=" – " include=first)|class="tv-sendung-titel">||</a>|<br/>}
index_category.scrub {multi(includeblock="Min." separator=", ""<br/>" include=last)|<span class="tv-sendung-info">||</span>|</span>}
index_category.modify {cleanup(tags="<"">")}
*
index_urlshow {url||<a id="broadcast-title|href="|" onclick=|" onclick=}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}
*
scope.range{(showdetails)|end}
title.scrub {single(separator=" – " include=first)|<div class="mainInfos">|<h1>|</h1>|</div>}
titleoriginal.scrub {single('title' ~ " – " separator=" – " include=last)|<div class="mainInfos">|<h1>|</h1>|</div>}
subtitle.scrub {single|<h2 class="tv-sendung-info">||</h2>|</h2>}
subtitle.scrub {single(null)|<span class="tv-sendung-info">||</span>|</span>}
titleoriginal.modify {clear('title')}
*
description.scrub {single|<div class="text">||</div>|</div>}
description.modify {cleanup(tags="<"">")}
description.modify {cleanup}
description.modify {remove|(Senderinfo)}
* 
director.scrub {single(separator="; ""<div" exclude="img src=""class=")|<div class="cast">|R:</span>|<span|<div class="seperator">}
actor.scrub {single(separator="; ""<span class=" exclude="img src=""tv-credits")|<div class="cast">|D:</span>|<div class="seperator">|<div class="seperator">}
*
presenter.scrub {single(separator=", ")|<div class="text">|Moderation: |<br/>|</div>}
description.modify {remove(separator=", ")|Moderation: 'presenter'}

temp_3.modify {substring(type=regex)|'description' "Staffel\s\d+"}
temp_4.modify {substring(type=regex)|'description' "Folge\s\d+"}
episode.modify {addstart(pattern="Staffel 'S1'Folge 'E1'""Staffel 'S1'""Folge 'E1'")|'temp_3''temp_4'}
*
temp_1.scrub {single|<div class="cast">||<div class="seperator">|</div>}
temp_1.modify {cleanup(tags="<"">")}
temp_1.modify {replace|, |\|}
temp_2.modify {calculate(format=F0 type=element)|'temp_1' #}
*
country.modify {substring('temp_2' "1" type=element)|'temp_1' 0 1}
*
titleoriginal.modify {substring('titleoriginal' "" 'temp_2' "2" lang=en type=element)|'temp_1' 0 1}
titleoriginal.modify {remove|O: }
country.modify {substring('temp_2' "2" type=element)|'temp_1' 1 1}
*
rating.modify {substring('country' not "" type=regex)|'country' "\sFSK:\s(\d+)"}
country.modify {remove('rating' not "" type=regex)|\sFSK:\s'rating'}
productiondate.modify {substring('country' not "" type=regex)|'country' "\d{4}(?:\/\d{2})?"}
country.modify {remove('productiondate' not "" type=regex)|\s*'productiondate'}
country.modify {remove(type=regex)|^[^;]*(;.*$)}
country.modify {replace|/|\|}
*
starrating.scrub {single|<div class="rating">|tagestipp_|.gif|">}
starrating.modify {addend(notnull)|/3}
*
rating.modify {addend|$%&Humor:'{multi(include=1)|<ul class="boller">|<li|</li>|</ul>}'}
rating.modify {addend|$%&Anspr.:'{multi(include=2)|<ul class="boller">|<li|</li>|</ul>}'}
rating.modify {addend|$%&Action:'{multi(include=3)|<ul class="boller">|<li|</li>|</ul>}'}
rating.modify {addend|$%&Span.:'{multi(include=4)|<ul class="boller">|<li|</li>|</ul>}'}
rating.modify {addend|$%&Ero.:'{multi(include=5)|<ul class="boller">|<li|</li>|</ul>}'}
rating.modify {replace|<img src="http://images.frz.tvtoday.de/_imgToday/program/boller_0.gif" height="8" width="33">|0/3}
rating.modify {replace|<img src="http://images.frz.tvtoday.de/_imgToday/program/boller_1.gif" height="8" width="33">|1/3}
rating.modify {replace|<img src="http://images.frz.tvtoday.de/_imgToday/program/boller_2.gif" height="8" width="33">|2/3}
rating.modify {replace|<img src="http://images.frz.tvtoday.de/_imgToday/program/boller_3.gif" height="8" width="33">|3/3}
rating.modify {replace|<img src="http://images.tvtoday.de/_imgToday/program/boller_0.gif" height="8" width="33">|0/3}
rating.modify {replace|<img src="http://images.tvtoday.de/_imgToday/program/boller_1.gif" height="8" width="33">|1/3}
rating.modify {replace|<img src="http://images.tvtoday.de/_imgToday/program/boller_2.gif" height="8" width="33">|2/3}
rating.modify {replace|<img src="http://images.tvtoday.de/_imgToday/program/boller_3.gif" height="8" width="33">|3/3}
rating.modify {replace|$%&|\|}
rating.modify {remove|class="last"}
rating.modify {remove|>}
rating.modify {remove(== "Humor:")|Humor:}
rating.modify {remove(== "Anspr.:")|Anspr.:}
rating.modify {remove(== "Action:")|Action:}
rating.modify {remove(== "Span.:")|Span.:}
rating.modify {remove(== "Ero.:")|Ero.:}
rating.modify {cleanup}
*
showicon.scrub {single|<div style="display:none">|<img src="|">|</div>}
*
titleoriginal.modify {clear('title')}
titleoriginal.modify {clear(~ ";")}
description.modify {remove(type=regex)|>.*$}
description.modify {cleanup}
description.modify {addstart("")|keine details!}
end_scope
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
** add this dummy as only channel in the config:
** <channel update="i" site="tvtoday.de" site_id="" xmltv_id="Dummy">Dummy</channel>
*index_site_channel.scrub {multi|Alle Sender alphabetisch</option><option value="all">|">|</option>|</select>}
*index_site_id.scrub {multi(debug)|Alle Sender alphabetisch</option><option value="all">|<option value="|">|</select>}
** @auto_xml_channel_end
