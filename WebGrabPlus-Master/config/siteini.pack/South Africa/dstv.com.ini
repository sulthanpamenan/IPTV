**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: dstv.com
* @MinSWversion: V1.1.1/54
*   none
* @Revision 7 - [08/04/2015] Francis De Paemeleere
*     Adjust .channels.xml generation, to get all Bouquets
* @Revision 6 - [07/04/2015] Francis De Paemeleere
*     completely new, due to site change
* @Remarks:
* This site needs a user-agent to be defined in the config file!
* Only quick fix done (could maybe use some further parsing like episode, sub-title, ...)
* @header_end
**------------------------------------------------------------------------------------------------

site {url=dstv.com|timezone=UTC|maxdays=6|cultureinfo=en-GB|charset=utf-8|titlematchfactor=90}
site {subtitlestype=deaf-signed|episodesystem=onscreen|ratingsystem=onscreen}
url_index{url|http://m.dstv.com/en/tvguide?utf8=%E2%9C%93&channel=|channel|&date=|urldate}
urldate.format {datestring|yyyy-MM-dd}
*
index_showsplit.scrub {regex||<table [^>]*class="list"[^>]*>(?:.*?(<tr.*?</tr>))*?\s*</table>||}

scope.range{(splitindex)|end}
index_showsplit.modify {substring(type=regex)|"<tr.*?\d{2}\:\d{2}.*?</tr>"} * only get rows where a time stamp is in
end_scope

index_start.scrub {regex||^.*?<span[^>]*>\s*(\d{2}\:\d{2})||}
index_title.scrub {regex||^.*?<span[^>]*>.*?</span>.*?<span[^>]*>(.*?)</span>||}
index_description.scrub {regex||</h3>(.*)||}

**index_temp_1.scrub {multi|<p class="ui-synopsis">|(|)|</p>}                 * get all the values between ()
**index_temp_2.scrub {single(include=first)|<p class="ui-synopsis">|'|'.|</p>}  * episode and subtitle candidate


scope.range{(indexshowdetails)|end}
index_title.modify {remove(type=regex)|<[^>]*>}
index_description.modify {remove(type=regex)|<[^>]*>}

******* split episode and subtitle:
******index_temp_3.modify {calculate(format=F0)|'index_description' "\'" @}         * get the index of the '
******index_temp_2.modify {clear('index_temp_3' not= "0")}                          * clear the scrubed episode and subtitle candidate, because this was not found at the start of the description
******index_description.modify {remove|\''index_temp_2'\'.}                         * remove this info from the description
******index_temp_2.modify {replace| - |\|}                                        * split the info into episode and subtitle (make multi)
******index_episode.modify {substring(type=element)|'index_temp_2' 0 1}             * the episode component
******index_subtitle.modify {substring(type=element)|'index_temp_2' 1 1}            * the subtitle component
******index_temp_3.modify {clear}                                                   * remove any episode component in the subtitle
******index_temp_3.modify {addstart|'index_episode'}                                * ||
******index_temp_3.modify {remove|S}                                                * ||
******index_temp_3.modify {remove|E}                                                * ||
******index_subtitle.modify {remove|'index_temp_3'}                                 * ||
******
******* replace abbreviated title (full title will be after any episode info)
******index_temp_3.modify {clear}
******index_temp_3.modify {substring('index_title' ~ "..." type=sentence)|'index_description' 0 1}
******index_temp_4.modify {addstart|'index_temp_3'}
******index_temp_5.modify {addstart|'index_title'}
******index_temp_5.modify {remove|...}
******index_temp_3.modify {cleanup}
******index_temp_3.modify {select|'index_temp_5' /=}
******index_title.modify {clear('index_temp_3' not="")}
******index_title.modify {addstart('index_temp_3' not="")|'index_temp_3'}
******index_description.modify {remove('index_temp_3' not="")|'index_temp_4'}
******
******* get the rating = the last value between ()
******index_rating.modify {substring(type=element)|'index_temp_1' -1 1}             * the last value between () is the rating
******index_temp_1.modify {remove(type=element)|-1 1}                               * remove this value from the () list
******index_description.modify {remove|('index_rating')}                          * remove rating info from the description
******
******* check if we have a production date
******index_productiondate.modify {substring(type=element)|'index_temp_1' -1 1}     * the last value between () can be the productiondate
******index_productiondate.modify {calculate(format=productiondate)}                * be sure we have a valid date
******
******* get the director
******* if the production date is found, the director is after that
******index_temp_2.modify {clear}
******index_temp_2.modify {addstart('index_productiondate' not="")|'index_description'}
******index_temp_2.modify {replace|('index_productiondate')|\|}                   * split the info into other and director (make multi)
******index_director.modify {substring(type=element)|'index_temp_2' -1 1}           * the last part should be the director
******index_description.modify {remove|'index_director'}                          * remove director info from the description
******index_director.modify {replace|,|\|}                                        * maybe there can be more than 1 director?
******* get the actors
******* if the production date is found, the actors are in the sentence before that
******index_actor.modify {substring(type=element)|'index_temp_2' 0 1}               * first part contains the actor sentence
******index_actor.modify {replace|.|\|}
******index_actor.modify {substring(type=element)|-2 1}
******index_description.modify {remove('index_actor' not="")|'index_actor'.}        * remove actors from the description
******index_actor.modify {replace|,|\|}
******index_description.modify {remove|('index_productiondate')}                  * remove productiondate from the description
******
******index_subtitles.modify {addstart('index_description' ~ "HI Subtitles")|true}
******index_description.modify {remove|HI Subtitles,}
******index_description.modify {remove|HI Subtitles}
******
******index_description.modify {cleanup}
end_scope

**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
****DStv Compact
***http://m.dstv.com/en/tvguide?bouquet_uuid=4a1cebf8-e7ed-4c9f-88b9-ac55a3fda740
****DStv Access
***http://m.dstv.com/en/tvguide?bouquet_uuid=cb178db7-20d7-47e3-b8e5-6a793a67fc5b
****DStv EasyView
***http://m.dstv.com/en/tvguide?bouquet_uuid=69f18c34-bd8b-4ffd-ad5b-1d283eda0beb
****DStv Extra
***http://m.dstv.com/en/tvguide?bouquet_uuid=a29ada84-59a8-47b5-932f-12949f8a446a
****DStv Family
***http://m.dstv.com/en/tvguide?bouquet_uuid=aa205f6b-7d18-4aea-ab8b-563d31eed0c9
****DStv Indian North
***http://m.dstv.com/en/tvguide?bouquet_uuid=7aec24fd-db34-472c-82e5-d6f9ea876b5a
****DStv Indian South
***http://m.dstv.com/en/tvguide?bouquet_uuid=8aa7585f-7258-4bbc-9ff9-febe007fbd91
****DStv Mobile
***http://m.dstv.com/en/tvguide?bouquet_uuid=bfa372cb-d002-472b-88f8-4a64fb35a602
****DStv Mobile DVBH
***http://m.dstv.com/en/tvguide?bouquet_uuid=60a08da2-d2ba-496f-b468-76365cdd109a
****DStv Now Bonus
***http://m.dstv.com/en/tvguide?bouquet_uuid=a7969b17-3722-42dd-8dc2-d03c2e9264bc
****DStv Portuguesa
***http://m.dstv.com/en/tvguide?bouquet_uuid=81d446ec-c899-4519-957c-83e99960afd4
****DStv Premium
***http://m.dstv.com/en/tvguide?bouquet_uuid=b6523bb9-4bf8-425f-b7a7-3e738039dfd9
****M-Net Terrestrial
***http://m.dstv.com/en/tvguide?bouquet_uuid=17ba765b-90ba-4b42-8c7b-1797445b63fe
*
*
*subpage.format{list|4a1cebf8-e7ed-4c9f-88b9-ac55a3fda740|cb178db7-20d7-47e3-b8e5-6a793a67fc5b|69f18c34-bd8b-4ffd-ad5b-1d283eda0beb|a29ada84-59a8-47b5-932f-12949f8a446a|aa205f6b-7d18-4aea-ab8b-563d31eed0c9|7aec24fd-db34-472c-82e5-d6f9ea876b5a|8aa7585f-7258-4bbc-9ff9-febe007fbd91|bfa372cb-d002-472b-88f8-4a64fb35a602|60a08da2-d2ba-496f-b468-76365cdd109a|a7969b17-3722-42dd-8dc2-d03c2e9264bc|81d446ec-c899-4519-957c-83e99960afd4|b6523bb9-4bf8-425f-b7a7-3e738039dfd9|17ba765b-90ba-4b42-8c7b-1797445b63fe}
**url_index{url|http://m.dstv.com/en/tvguide?utf8=%E2%9C%93}
*url_index{url|http://m.dstv.com/en/tvguide?bouquet_uuid=|subpage|}
*index_site_id.scrub {regex||<select[^>]*name=\"channel\"[^>]*>\s*(<option[^>]*value=\".*?\"[^>]*>.*?</option>\s*)*||}
*scope.range {(channellist)|end}
*index_site_channel.modify {addstart|'index_site_id'}
*index_site_channel.modify {substring(type=regex)|<option[^>]*value=\".+?\"[^>]*>\s*(.+?)\s*</option>}
*index_site_channel.modify {replace(type=regex)|\s{1,}| }
*index_site_id.modify {substring(type=regex)|<option[^>]*value=\"(.+?)\"[^>]*>.+?</option>}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
