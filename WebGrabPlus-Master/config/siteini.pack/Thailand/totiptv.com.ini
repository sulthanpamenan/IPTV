**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @MinSWversion: 1.1.1/53
* @Site: totiptv.com
* @MinSWversion:
* @Revision 0 - [16/08/2014] Jan van Straaten
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------

site {url=totiptv.com|timezone=Asia/Bangkok|maxdays=7|cultureinfo=th-TH|charset=UTF-8|titlematchfactor=90}
site {skip=<skip>16,1</skip>}
*
url_index{url(debug)|http://203.114.100.152/tvschedulenew/SearchSchedule.php}
*http://203.114.100.152/tvschedulenew/SearchSchedule.php
urldate.format {datestring|yyyy-MM-dd|en-GB}
*
url_index.headers {customheader=Accept-Encoding=gzip,deflate} * to speedup the downloading of the index pages
url_index.headers {accept=application/json, text/javascript, */*; q=0.01}
url_index.headers {contenttype=application/x-www-form-urlencoded; charset=UTF-8}
url_index.headers {customheader=X-Requested-With=XMLHttpRequest}
url_index.headers {referer=http://203.114.100.152/tvschedulenew/}
url_index.headers {host=203.114.100.152}
url_index.headers {method=POST}
url_index.headers {postdata=_package=0&channel='channel'&movietype=0&date='urldate'&keyword=}
_package=0&channel=345a4277-dd86-4037-b6b4-fb5a562af59c&movietype=0&date=2014-08-16&keyword=
index_showsplit.scrub {regex||(\"itemid\".+?\"category\"\:\"\d+?\")||}
index_showsplit.modify {cleanup(style=jsondecode)}
index_showsplit.modify {remove(type=regex)|'index_showsplit' "(\"itemid\".+?\"SlotDuration\"\:\"00\:00\".+?\"category\"\:\"\d\")"} * removes 0 duration shows
*
index_urlchannellogo.scrub {regex||\"chImg\"\:\"(.+?)\",\"||}
index_urlchannellogo.modify {substring(type=element)|0 1}
index_urlchannellogo.modify {addstart|http://203.114.100.152/tvschedulenew/channelpics/}
*index_date.scrub {single|}
index_start.scrub {regex||\"ScheduleStartTime\"\:\"(\d{2}\:\d{2})\:||}
*index_duration.scrub {regex||"SlotDuration":"(\d{2}\:\d{2})","||} *better without! Inreliable data
index_title.scrub {regex||\"seriesid\":\"(.*?)\",\"||}
index_description.scrub {regex||\"description\":\"(.*?)\",\"||}
index_episode.scrub {regex||\"EPISODE\"\:\"(.*?)\",\"||}
index_temp_1.scrub {regex||\"SEASON\"\:\"(.*?)\",\"||}
index_temp_1.modify {addstart(not "")|S}
index_episode.modify {addstart(not "")|'index_temp_1' E}
index_showicon.scrub {regex||\"seriespic\":\"(.*?)\",\"||}
index_showicon.modify {clear(= "nopic.jpg")}
index_category.scrub {regex||\"movietype\":\"(.*?)\",\"||}
*index_urlshow {url|}
*index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the

**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index {url|http://203.114.100.152/tvschedulenew/getSearchPara.php}
*index_site_channel.scrub {regex||\"chName\"\:\"(.+?)\",\"||}
*index_site_channel.modify {cleanup(style=jsondecode)}
*index_site_id.scrub {regex||\"chid\"\:\"(.+?)\",\"||}
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
